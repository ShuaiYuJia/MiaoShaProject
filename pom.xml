<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

<!--  声明自己的group_Id,项目名字和版本号-->
  <groupId>org.example</groupId>
  <artifactId>MiaoShaProject</artifactId>
  <version>1.0-SNAPSHOT</version>

<!--  对应的项目名称-->
  <name>MiaoShaProject</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>


<!--  指定父pom文件的路径，是springboot提供的一个-->
  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
      <version>2.0.5.RELEASE</version>
<!--    <version>2.5.4</version>-->
  </parent>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>

<!--    使用了父pom中的springboot起步依赖，会下载这个依赖-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

<!--    导入mysql依赖-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>

<!--    设置管理mysql的连接池，这里采用阿里巴巴德鲁伊连接池-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.1.3</version>
    </dependency>

<!--    下载springboot对mybatis的支持-->
    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>1.3.1</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>


<!--      加入apache.commons的包-->
      <dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
          <version>3.7</version>
      </dependency>

<!--      校验代码优化组件-->
      <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-validator</artifactId>
          <version>5.2.4.Final</version>
      </dependency>


  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

<!--        使用mybatis自动生成工具，生成一个数据库文件的映射-->
<!--        首先引入mybatis自动生成文件的插件-->
        <plugin>
          <groupId>org.mybatis.generator</groupId>
          <artifactId>mybatis-generator-maven-plugin</artifactId>
          <version>1.3.5</version>

<!--          生成对应的plugin需要一些dependencies-->
          <dependencies>
            <dependency>
              <groupId>org.mybatis.generator</groupId>
              <artifactId>mybatis-generator-core</artifactId>
              <version>1.3.5</version>
            </dependency>

<!--            因为本项目使用的是mysql数据库，所以需要对mysql数据库做一个解析-->
            <dependency>
              <groupId>mysql</groupId>
              <artifactId>mysql-connector-java</artifactId>
                <version>5.1.41</version>
            </dependency>
          </dependencies>

<!--          指定导入之后要做的处理-->
          <executions>
            <execution>
<!--              名字随便起-->
              <id>mybatis generator</id>
<!--              阶段在package阶段-->
              <phase>package</phase>
<!--              目的-->
              <goals>
                <goal>generate</goal>
              </goals>
            </execution>
          </executions>

<!--          考虑到实际项目中会有反复生成文件的情况，所以加一些配置-->
          <configuration>
<!--            允许移动生成的文件-->
            <verbose>true</verbose>

<!--            允许自动覆盖，实际项目开发中不能设置成true，会覆盖别人的成果-->
            <overwrite>true</overwrite>

<!--            mybatis generation 配置文件的路径-->
            <configurationFile>
              src/main/resources/mybatis-generator.xml
            </configurationFile>

          </configuration>

        </plugin>

      </plugins>
    </pluginManagement>
  </build>
</project>
